{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","currentPlayer","stepNumber","slice","current","length","calculateWinner","setState","concat","step","status","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4744a43.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null) }],\n      currentPlayer: \"X\",\n      stepNumber: 0,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(current.squares) || current.squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.currentPlayer;\n\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      currentPlayer: this.state.currentPlayer === \"X\" ? \"O\" : \"X\",\n      stepNumber: history.length,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      currentPlayer: step % 2 === 0 ? \"X\" : \"O\",\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move\n        ? \"Jump to move number # \" + move\n        : \"Jump to game beginning\";\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status;\n\n    if (winner === \"tie\") {\n      status = \"Its a Tie!\";\n    } else if (winner) {\n      status =\n        \"The Winner is: \" + (this.state.currentPlayer === \"X\" ? \"O\" : \"X\");\n    } else {\n      status = \"Current Player: \" + this.state.currentPlayer;\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  if (squares.includes(null) === false) {\n    return \"tie\";\n  }\n  return null;\n}\n"],"sourceRoot":""}